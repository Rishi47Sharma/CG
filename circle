#include <GL/glut.h>
#include<math.h>
#include<iostream>
using namespace std;
int w = 640;
int h= 480;
int x= 40 ;
int y= 50;
int r= 60;
static int menu_id;
static int submenu_id;
void MyInit()
{
glClearColor(1.0, 1.0, 1.0, 1.0);
glColor3f(0.0, 0.0, 0.0);
glPointSize(4.0);
gluOrtho2D(-w/2,w/2,-h/2,h/2);
}
void Bresenham(int x0, int y0, int r)
{
int x=0;
int y=r;
int d=3-2*r;
do{
    glBegin(GL_POINTS);
    glVertex2i(x,y);
    glVertex2i(-x,y);
    glVertex2i(x,-y);
    glVertex2i(-x,-y);
    glVertex2i(y,x);
    glVertex2i(-y,x);
    glVertex2i(y,-x);
    glVertex2i(-y,-x);
    glEnd();
    glFlush();
    if(d<0){
    d+=4*x+6;
    }
    else{
    d+=4*(x-y)+10;
    y--;
    }
    x++;
}while(x<y);


}

void display() {
glClear(GL_COLOR_BUFFER_BIT);

glBegin(GL_LINES);
glVertex2i(-w/2, 0);
glVertex2i(w/2, 0);
glVertex2i(0, -h/2);
glVertex2i(0, h/2);
glEnd();


glFlush();
}

void submenu(int a){
     switch(a){
     case 1:
       Bresenham(x, y, r);
       break;
     }
}




int main(int argc, char** argv) {

glutInit(&argc, argv); //Initialize glut
glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);

glutInitWindowPosition(0, 0);
glutInitWindowSize(640, 480); 
glutCreateWindow("Bresenham Circle"); 
MyInit();
glutDisplayFunc(display);
menu_id= glutCreateMenu(submenu);
 glutAddMenuEntry("Circle",1);
submenu_id=glutCreateMenu(submenu); 
 glutAddSubMenu("1.Breshnem",menu_id);
glutAttachMenu(GLUT_RIGHT_BUTTON);



glutMainLoop(); //Enter the loop and wait
return 0;
}
